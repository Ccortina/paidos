<?xml version="1.0" encoding="UTF-8"?>
<bean:beans
	xmlns:bean ="http://www.springframework.org/schema/beans"
	xmlns:xsi ="http://www.w3.org/2001/XMLSchema-instance"
	xmlns ="http://www.springframework.org/schema/security"
	xsi:schemaLocation ="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- Taking of any security for resource files like CSS, images, javascript -->
	  
	<http pattern="/resources/**" security="none" />
	
	
	<!-- Creates a servlet filter,ensures that the currently logged-in user is associated to the
		appropiate role.The intercept url is applied in order of precedence only applying the first
		occurence, and at the end the rule /** applies for anything that didn't match the previous -->

	<http use-expressions="true" >
            
            <session-management invalid-session-url="/login?timeout">
                <concurrency-control max-sessions="1" expired-url="/login?timeout" />
            </session-management>

            <form-login 
                login-page="/login" 
                default-target-url="/home" 
                    authentication-failure-url="/login?error" 
                    username-parameter="username"
                    password-parameter="password" />
            <logout logout-success-url="/login?logout" />

            <intercept-url pattern="/login*" access="permitAll()" />
            <intercept-url pattern="/**" access="isAuthenticated()"/> <!-- All URLs will check if user is authenticated -->		
	</http>
	
	<!-- This is how Spring authenticates the user -->
        <bean:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
            <bean:property name="userDetailsService" ref="userDetailsService"></bean:property> 
        </bean:bean>
        
        <bean:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
            <bean:property name="providers">
                <bean:list>
                    <bean:ref local="daoAuthenticationProvider"/>
                </bean:list>
            </bean:property>
        </bean:bean> 
        
        <authentication-manager>
            <authentication-provider user-service-ref="userDetailsService">
                <password-encoder ref="encoder" /> 
            </authentication-provider>
        </authentication-manager>
        
        <bean:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>                           		           
</bean:beans>